<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

class Category extends Model
{
    protected $fillable = ['name', 'is_directory', 'level', 'path'];

    protected $casts = [
        'is_directory' => 'boolean'
    ];

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        // 监听 Category 的创建事件，用于初始化 path 和 level的值
        static::creating(function (Category $category) {
            // 如果创建的是一个根类目
            if (is_null($category->parent_id)) {
                // 层级为0
                $category->level = 0;
                // 将path设为-
                $category->path = '-';
            }else{
                // 将层级设置为父类 +1
                $category->level = $category->parent->level + 1;
                // 将path设置为父类目path 追加父类ID 和 -
                $category->path = $category->parent->path.$category->parent_id.'-';
            }
        });
    }


    /**
     * relation with parent level
     *
     * @return \Illuminate\Database\Eloquent\Relations\BelongsTo
     */
    public function parent()
    {
        return $this->belongsTo(Category::class);
    }


    /**
     * relation with children level
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function children()
    {
        return $this->hasMany(Category::class, 'parent_id');
    }


    /**
     * relation with the model of Product
     *
     * @return \Illuminate\Database\Eloquent\Relations\HasMany
     */
    public function products()
    {
        return $this->hasMany(Product::class);
    }


    /**
     * 返回所有祖先类的ID
     *
     * @return array
     */
    public function getPathIdsAttribute()
    {
        // trim($str,'-') 将字符串两边的 '-' 删除
        // explode() 将字符串以 '-' 为分隔符，组合成数组
        // 最后 array_filter 移除空值
        return array_filter(explode('-', trim($this->path, '-')));
    }


    /**
     * 返回所有祖先类目并按层级排序
     *
     * @return \Illuminate\Database\Eloquent\Builder[]|\Illuminate\Database\Eloquent\Collection
     */
    public function getAncestorsAttribute()
    {
        return self::query()
            ->whereIn('id', $this->path_ids)
            // 按层级排列
            ->orderBy('level')
            ->get();
    }


    /**
     * 获取以 - 为分隔的所有祖先类目名称以及当前类目的名称
     *
     * @return mixed
     */
    public function getFullNameAttribute()
    {
        return $this->ancestors->pluck('name')
            ->push($this->name)
            ->implode('-');
    }
}
